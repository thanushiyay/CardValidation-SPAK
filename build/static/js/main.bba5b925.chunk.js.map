{"version":3,"sources":["logo.svg","assets/chip.png","components/GenericCard.js","components/Card.js","components/CardTypes.js","components/FormContainer.js","App.js","reportWebVitals.js","index.js"],"names":["GenericCard","cardNumber","cardHolder","cardType","expiryMonth","expiryYear","cardSwitch","cardCVV","className","src","Chip","split","map","item","arr","Card","cardInput","useState","setCardType","useEffect","card","length","cardNum","payCardType","regexMap","regEx","j","match","indexOf","i","d","c","parseInt","f","substr","CardTypes","join","index","INIT_CARD_STATE","cardNumberRegex","cardHolderRegex","FormContainer","props","setCardSwitch","setCardInput","isCardNumberError","setIsCardNumberError","isCardHolderError","setIsCardHolderError","handleInputChange","event","temp","target","name","cardVal","value","replace","trim","toUpperCase","cardcvv","onSubmit","e","console","log","preventDefault","cardHolderValue","for","Form","Control","type","placeholder","required","onChange","style","display","Select","onBlur","onFocus","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bba5b925.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/chip.f88a902d.png\";","import React from \"react\";\r\nimport Chip from \"../assets/chip.png\";\r\n\r\nexport default function GenericCard({\r\n  cardNumber,\r\n  cardHolder,\r\n  cardType,\r\n  expiryMonth,\r\n  expiryYear,\r\n  cardSwitch,\r\n  cardCVV\r\n}) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={\"cardWrapper \" + cardType + \" \" + cardSwitch}>\r\n        {cardSwitch == \"FRONT\" ? (\r\n          <div className=\"cardHeader\">\r\n            <img src={Chip} className=\"cardChip\" />\r\n            <div className={\"cardTypeWrap \" + cardType} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"cardBackHeader\"></div>\r\n        )}\r\n        <div className=\"cardBody\">\r\n          {cardSwitch == \"FRONT\" ? (\r\n            cardNumber\r\n          ) : (\r\n            <div className=\"cardBackBody\">\r\n              <div>CVV</div>\r\n              {cardCVV.split('').map((item) => '*')}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"cardFooter\">\r\n          {cardSwitch === \"FRONT\" ? (\r\n            <>\r\n              <div className=\"cardFooterSection\">\r\n                <span className=\"footerHeading\">Card Holder</span>\r\n                <span>{cardHolder}</span>\r\n              </div>\r\n              <div className=\"cardFooterSection\">\r\n                <span className=\"footerHeading\">Expires</span>\r\n                <span>\r\n                  {expiryMonth}/{expiryYear}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"cardBackFooter\">\r\n              <div className=\"cardHeader\">\r\n                <div className={\"cardTypeWrap \" + cardType} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport CardTypes from \"./CardTypes\";\r\nimport GenericCard from \"./GenericCard\";\r\n\r\nconst arr = [\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \" \",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \" \",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \" \",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n  \"#\",\r\n];\r\nconst DEFAULT_FULL_NAME = 'FULL NAME';\r\nconst DEFAULT_EXPIRY_MONTH = \"MM\";\r\nconst DEFAULT_EXPIRY_YEAR = \"YY\";\r\nconst DEFAULT_CARD_TYPE = 'VISA';\r\n\r\nexport default function Card({ cardInput, cardSwitch }) {\r\n\r\n  const [cardType, setCardType] = useState(DEFAULT_CARD_TYPE);\r\n\r\n  const checkHash = () => {\r\n    return arr.map((item, index) => {\r\n      return cardInput?.cardNumber?.[index] ? (\r\n        <>{cardInput?.cardNumber?.[index]}</>\r\n      ) : (\r\n        arr[index]\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let card =\r\n      cardInput?.cardNumber?.length > 0\r\n        ? CardTypes(cardInput?.cardNumber?.split(\" \").join(\"\"))\r\n        : \"VISA\";\r\n    if (card) {\r\n      setCardType(card);\r\n    }\r\n  }, [cardInput.cardNumber]);\r\n\r\n  return (\r\n    <GenericCard\r\n      cardNumber={checkHash()}\r\n      cardHolder={cardInput.cardHolder ? cardInput.cardHolder : DEFAULT_FULL_NAME}\r\n      cardType={cardType}\r\n      expiryMonth={cardInput.expiryMonth ? cardInput.expiryMonth : DEFAULT_EXPIRY_MONTH}\r\n      expiryYear={cardInput.expiryYear ? cardInput.expiryYear : DEFAULT_EXPIRY_YEAR}\r\n      cardSwitch={cardSwitch}\r\n      cardCVV={cardInput.cardCVV}\r\n    />\r\n  );\r\n}\r\n","export default function CardTypes(cardNum) {\r\n\r\n\r\n  var payCardType = '';\r\n  const regexMap = [\r\n    {regEx: /^4[0-9]{5}/ig,cardType: \"VISA\"},\r\n    {regEx: /^5[1-5][0-9]{4}/ig,cardType: \"MASTERCARD\"},\r\n    {regEx: /^3[47][0-9]{3}/ig,cardType: \"AMEX\"},\r\n    {regEx: /^(5[06-8]\\d{4}|6\\d{5})/ig,cardType: \"MAESTRO\"}\r\n  ];\r\n \r\n    \r\n    for (var j = 0; j < regexMap.length; j++) {\r\n      if (cardNum.match(regexMap[j].regEx)) {\r\n        payCardType = regexMap[j].cardType;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (cardNum.indexOf(\"50\") === 0 || cardNum.indexOf(\"60\") === 0 || cardNum.indexOf(\"65\") === 0) {\r\n      var g = \"508500-508999|606985-607984|608001-608500|652150-653149\";\r\n      var i = g.split(\"|\");\r\n      for (var d = 0; d < i.length; d++) {\r\n        var c = parseInt(i[d].split(\"-\")[0], 10);\r\n        var f = parseInt(i[d].split(\"-\")[1], 10);\r\n        if ((cardNum.substr(0, 6) >= c && cardNum.substr(0, 6) <= f) && cardNum.length >= 6) {\r\n          payCardType = \"RUPAY\";\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return payCardType;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"./Card\";\r\n\r\nconst INIT_CARD_STATE = {\r\n  cardNumber: \"\",\r\n  cardHolder: \"\",\r\n  expiryMonth: \"\",\r\n  expiryYear: \"\",\r\n  cardCVV: \"\",\r\n};\r\nconst cardNumberRegex = /^\\d{0,16}$/g;\r\nconst cardHolderRegex =  /^[a-zA-Z\\s]*$/g;\r\n\r\nexport default function FormContainer(props) {\r\n  const [cardSwitch, setCardSwitch] = useState(\"FRONT\");\r\n\r\n  const [cardInput, setCardInput] = useState(INIT_CARD_STATE);\r\n  const [isCardNumberError, setIsCardNumberError] = useState(false);\r\n  const [isCardHolderError, setIsCardHolderError] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    // console.log(event.target.value);\r\n    const temp = { ...cardInput };\r\n\r\n    switch (event.target.name) {\r\n      case \"cardNumber\":\r\n        let cardVal = event.target.value;\r\n        if (cardVal.length < 20) {\r\n          temp[event.target.name] = cardVal\r\n            .replace(/\\s?/g, \"\")\r\n            .replace(/(\\d{4})/g, \"$1 \")\r\n            .trim();\r\n          setCardInput(temp);\r\n        }\r\n        break;\r\n\r\n      case \"cardHolder\":\r\n        temp[event.target.name] = event.target.value.toUpperCase();\r\n        setCardInput(temp);\r\n        break;\r\n\r\n      case \"cardCVV\":\r\n        let cardcvv = event.target.value;\r\n        if (cardcvv.length < 4) {\r\n          temp[event.target.name] = cardcvv;\r\n          setCardInput(temp);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        temp[event.target.name] = event.target.value;\r\n        setCardInput(temp);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(cardInput);\r\n    e.preventDefault();\r\n\r\n    let cardNumberValue = cardInput.cardNumber.split(\" \").join(\"\");\r\n    if (cardNumberValue.match(cardNumberRegex)) {\r\n      setIsCardNumberError(false);\r\n    } else {\r\n      setIsCardNumberError(true);\r\n    }\r\n\r\n    let cardHolderValue = cardInput.cardHolder;\r\n    console.log(cardHolderValue);\r\n    if (cardHolderValue.match(cardHolderRegex)) {\r\n      setIsCardHolderError(false);\r\n    } else {\r\n      setIsCardHolderError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card cardInput={cardInput} cardSwitch={cardSwitch} />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"formWrapper\">\r\n          <div className=\"formInputWrapper\">\r\n            <label for=\"formInput\">Card Number</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"cardNumber\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleInputChange}\r\n              value={cardInput[\"cardNumber\"]}\r\n            />\r\n            <span style={{ display: isCardNumberError ? \"block\" : \"none\" }}>\r\n              Invalid Card Number\r\n            </span>\r\n          </div>\r\n          <div className=\"formInputWrapper\">\r\n            <label for=\"formInput\">Card Name</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              required\r\n              name=\"cardHolder\"\r\n              onChange={handleInputChange}\r\n              value={cardInput[\"cardHolder\"]}\r\n            />\r\n            <span style={{ display: isCardHolderError ? \"block\" : \"none\" }}>\r\n              Invalid Card Holder Name\r\n            </span>\r\n          </div>\r\n          <div className=\"formInputWrapper formDropDownWrapper\">\r\n            <div>\r\n              <label for=\"formInput\">Expiration Date</label>\r\n              <div className=\"formDropDown\">\r\n                <Form.Select\r\n                  aria-label=\"Month\"\r\n                  required\r\n                  name=\"expiryMonth\"\r\n                  onChange={handleInputChange}\r\n                  value={cardInput[\"expiryMonth\"]}\r\n                >\r\n                  <option value=\"\">Month</option>\r\n                  <option value=\"01\">01</option>\r\n                  <option value=\"02\">02</option>\r\n                  <option value=\"03\">03</option>\r\n                  <option value=\"04\">04</option>\r\n                  <option value=\"05\">05</option>\r\n                  <option value=\"06\">06</option>\r\n                  <option value=\"07\">07</option>\r\n                  <option value=\"08\">08</option>\r\n                  <option value=\"09\">09</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"11\">11</option>\r\n                  <option value=\"12\">12</option>\r\n                </Form.Select>\r\n                <Form.Select\r\n                  aria-label=\"Year\"\r\n                  name=\"expiryYear\"\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  value={cardInput[\"expiryYear\"]}\r\n                >\r\n                  <option value=\"\">Year</option>\r\n                  <option value=\"21\">21</option>\r\n                  <option value=\"22\">22</option>\r\n                  <option value=\"23\">23</option>\r\n                  <option value=\"24\">24</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"26\">26</option>\r\n                  <option value=\"27\">27</option>\r\n                  <option value=\"28\">28</option>\r\n                  <option value=\"29\">29</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"31\">31</option>\r\n                  <option value=\"32\">32</option>\r\n                </Form.Select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label for=\"formInput\">CVV</label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"\"\r\n                name=\"cardCVV\"\r\n                required\r\n                onChange={handleInputChange}\r\n                value={cardInput[\"cardCVV\"]}\r\n                onBlur={() => setCardSwitch(\"FRONT\")}\r\n                onFocus={() => setCardSwitch(\"BACK\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"formInputWrapper\">\r\n            <Button type=\"submit\">Submit</Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Card from \"./components/Card\";\nimport FormContainer from \"./components/FormContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Wrapper\">\n        <FormContainer/> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}